server:
  port: 8080
spring:
# kafka消费者配置
  kafka:
    consumer:
      bootstrap-servers: 192.168.1.184:9092,192.168.1.185:9092,192.168.1.186:9092
      enable-auto-commit: false
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 50
    producer:
      retries: 3 # 设置大于 0 的值，则客户端会将发送失败的记录重新发送
      batch-size: 16384
      buffer-memory: 33554432
      acks: all
      bootstrap-servers: 192.168.1.184:9092,192.168.1.185:9092,192.168.1.186:9092
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      ack-mode: manual_immediate
      type: batch #必须要是batch才支持消费者批量消费，默认是single
  application:
    name: SpringBootTeamSystem
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/SpringBootTeamSystem?useSSL=false&serverTimezone=UTC
    username: root
    password: 661015......
  redis:
    host: 150.158.145.233
    port: 6379
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
        time-between-eviction-runs: 10s
  jackson:
    default-property-inclusion: non_null # JSON处理时忽略非空字段
logging:
  level:
    com.wtmc.springbootteamsystem: debug
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.wtmc.springbootteamsystem.entity
